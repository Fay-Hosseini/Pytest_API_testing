{
	"info": {
		"_postman_id": "6162c7c0-00aa-47a3-bbf3-bd33b377adae",
		"name": "Book_API_TestCases",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30732513"
	},
	"item": [
		{
			"name": "Positive_TestCases",
			"item": []
		},
		{
			"name": "Negative_TestCases",
			"item": []
		},
		{
			"name": "StatusCode",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Status code should be 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/v1/Books",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"v1",
						"Books"
					]
				}
			},
			"response": []
		},
		{
			"name": "response_array",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Response should be an array\r",
							"pm.test(\"Response is an array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an('array')\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/v1/Books",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"v1",
						"Books"
					]
				}
			},
			"response": []
		},
		{
			"name": "response_not_empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Array should not be empty\r",
							"pm.test(\"Response array is not empty\", function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.be.above(0)\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Books"
					]
				}
			},
			"response": []
		},
		{
			"name": "check_id_title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Each book should have an 'id' and 'title'\r",
							"pm.test(\"Each book has id and title\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    jsonData.forEach(function (book) {\r",
							"        pm.expect(book).to.have.property('id');\r",
							"        pm.expect(book).to.have.property('title');\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Books"
					]
				}
			},
			"response": []
		},
		{
			"name": "expected_fields",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//First book should contain expected fields\r",
							"pm.test(\"Book object has correct structure\", function(){\r",
							"    var expectedFields = [\"id\", \"title\", \"description\", \"pageCount\", \"excerpt\", \"publishDate\" ]\r",
							"    var book = pm.response.json()[0]\r",
							"\r",
							"    expectedFields.forEach(function(field){\r",
							"        pm.expect(book).to.have.property(field)\r",
							"\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Books"
					]
				}
			},
			"response": []
		},
		{
			"name": "invalid_endpoint",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Invalid endpoint should return 404\r",
							"pm.test(\"Invalid endpoint returns 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"    });"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/v1/invalid",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"invalid"
					]
				}
			},
			"response": []
		},
		{
			"name": "invalid_method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Wrong method (POST on /Books without body) should return 405 or 400 or 415\r",
							"pm.test(\"Invalid method returns error\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400,404,415])\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Books"
					]
				}
			},
			"response": []
		},
		{
			"name": "non_existing_book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Fetch non-existing book ID (e.g., /Books/99999) should return 404\r",
							"pm.test(\"Non-existing book ID returns 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books/99999",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Books",
						"99999"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://fakerestapi.azurewebsites.net",
			"type": "default"
		}
	]
}